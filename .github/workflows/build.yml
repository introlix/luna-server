name: Build and Publish Binaries

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: write

jobs:
  build:
    name: Build Binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.13

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller numpy

    - name: Build Binary
      run: |
        pyinstaller luna-server.spec

    - name: Verify Build Output
      run: |
        ls -R dist

        - name: Zip Binary (Linux)
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        zip -r luna-server-linux.zip dist/luna-server

    - name: Zip Binary (Windows)
      if: startsWith(matrix.os, 'windows')
      run: |
        Compress-Archive -Path dist\luna-server\* -DestinationPath luna-server-windows.zip


    - name: Upload Binary Artifact
      uses: actions/upload-artifact@v3
      with:
        name: luna-server-${{ matrix.os }}
        path: |
          luna-server-linux.zip
          luna-server-windows.zip

  publish:
    name: Publish Release
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Download Linux Artifact
      uses: actions/download-artifact@v3
      with:
        name: luna-server-ubuntu-latest

    - name: Download Windows Artifact
      uses: actions/download-artifact@v3
      with:
        name: luna-server-windows-latest

    - name: Create Release
      id: create_release
      uses: ncipollo/release-action@v1
      with:
        token: ${{ secrets.TOKEN }}
        tag: ${{ github.run_number }}
        name: Release ${{ github.run_number }}
        body: Binary release for luna-server
        draft: false
        prerelease: false

    - name: Upload Linux Asset to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: luna-server-linux.zip
        asset_name: luna-server-linux.zip
        asset_content_type: application/zip

    - name: Upload Windows Asset to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: luna-server-windows.zip
        asset_name: luna-server-windows.zip
        asset_content_type: application/zip
